definitions:        # Schema defination for request body
  users:
    type: object
    required: 
      - firstname
      - lastname
      - email
      - password
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      password:
        type: string
        description: Password for login
paths:
  /api/user/register:      # path of your endpoint
    post:                 # endpoint request type (post request)
      tags:               # Tag property
        - Users         # Value of the tag
      summary: Creates A New User
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/definitions/users'          
      responses:
        '201':
          description: User is successful registered
        '500':
          description: Internal server error
        '409':
          description: Already exists
        '400':
          description: Invalid data in the request 
     
  /api/verify-user?token={emailToken}:           # path of your endpoint
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - Users         # Value of the tag
      summary: Verifies A Newerly Registered User
      parameters:
      - in: path
        name: emailToken
        schema:
          type: string
        required: true
        description: Email Token        
      responses:
        '200':
          description: User Verified Successfully
        '404':
          description: User Not Found
        '500':
          description: Server Not Found
